{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alan\\\\OneDrive - \\u570B\\u7ACB\\u53F0\\u7063\\u5927\\u5B78\\\\\\u684C\\u9762\\\\repo\\\\frontend\\\\src\\\\Component\\\\Indicators.js\",\n    _s = $RefreshSig$();\n\nimport { Select } from 'antd';\nimport 'antd/dist/antd.css'; //import axios from 'axios';\n\nimport { useEffect, useState } from 'react';\nimport { InputNumber } from 'antd';\nimport { Space } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst indicators = ['RSI', 'MACD', 'KD', 'EMA'];\nconst indicatorsNum = {\n  RSI: [5, 2, 25],\n  MACD: [1, 1, 90],\n  KD: [9, 2, 30],\n  EMA: [1, 1, 90]\n};\n\nconst Indicators = _ref => {\n  _s();\n\n  let {\n    setIndicator,\n    setRate,\n    setClickCheck\n  } = _ref;\n  const [ind, setInd] = useState(indicatorsNum[indicators[0]]);\n  const [indNum, setIndNum] = useState(indicatorsNum[indicators[0]][0]);\n\n  const onChangeIndicator = value => {\n    console.log(`selected ${value}`);\n    setIndicator(value);\n    setInd(indicatorsNum[value]);\n    setRate(indicatorsNum[value][0]);\n    setIndNum(indicatorsNum[value][0]);\n    setClickCheck(false);\n  };\n\n  const onChangeIndNum = value => {\n    console.log(`selected ${value}`);\n    setIndNum(value);\n    setRate(value);\n    setClickCheck(false);\n  };\n\n  const onSearch = val => {\n    console.log('search:', val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      className: \"indicators\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u958B\\u95DC\\u55AE\\u6307\\u6A19\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: indicators[0],\n        style: {\n          width: 120\n        },\n        onChange: onChangeIndicator,\n        filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n        children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(Option, {\n          children: indicator\n        }, indicator, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n        min: ind[1],\n        max: ind[2],\n        defaultValue: ind[0],\n        onChange: onChangeIndNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Indicators, \"QpyDz6l6z5l3STGAXeFlBI6dBvI=\");\n\n_c = Indicators;\nexport default Indicators; //const onChangeRate = (value) => {\n//    console.log(`selected ${value}`);\n//}\n//<InputNumber min={0} max={100} defaultValue={3} onChange={onChangeRate} />\n\nvar _c;\n\n$RefreshReg$(_c, \"Indicators\");","map":{"version":3,"sources":["C:/Users/Alan/OneDrive - 國立台灣大學/桌面/repo/frontend/src/Component/Indicators.js"],"names":["Select","useEffect","useState","InputNumber","Space","Option","indicators","indicatorsNum","RSI","MACD","KD","EMA","Indicators","setIndicator","setRate","setClickCheck","ind","setInd","indNum","setIndNum","onChangeIndicator","value","console","log","onChangeIndNum","onSearch","val","width","input","option","children","toLowerCase","indexOf","map","indicator"],"mappings":"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","sourcesContent":["import { Select } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n//import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { InputNumber } from 'antd';\r\nimport { Space } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst indicators = ['RSI', 'MACD', 'KD', 'EMA'];\r\nconst indicatorsNum = {\r\n  RSI: [5, 2, 25],\r\n  MACD: [1, 1, 90],\r\n  KD: [9, 2, 30],\r\n  EMA: [1, 1, 90],\r\n};\r\n\r\nconst Indicators = ({ setIndicator, setRate, setClickCheck }) => {\r\n\r\n    const [ind, setInd] = useState(indicatorsNum[indicators[0]]);\r\n    const [indNum, setIndNum] = useState(indicatorsNum[indicators[0]][0]);\r\n\r\n    const onChangeIndicator = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setIndicator(value);\r\n        setInd(indicatorsNum[value]);\r\n        setRate(indicatorsNum[value][0]);\r\n        setIndNum(indicatorsNum[value][0]);\r\n        setClickCheck(false);\r\n    }\r\n\r\n    const onChangeIndNum = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setIndNum(value);\r\n        setRate(value);\r\n        setClickCheck(false);\r\n    }\r\n      \r\n    const onSearch = (val) => {\r\n        console.log('search:', val);\r\n    }\r\n      \r\n    return(\r\n        <div>\r\n            <Space className='indicators'>\r\n                <h3>開關單指標</h3>\r\n                <Select defaultValue={indicators[0]} \r\n                        style={{ width: 120 }} \r\n                        onChange={onChangeIndicator}\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }>\r\n                    {indicators.map(indicator => (\r\n                        <Option key={indicator}>{indicator}</Option>\r\n                    ))}\r\n                </Select>\r\n                <InputNumber \r\n                    min={ind[1]} \r\n                    max={ind[2]} \r\n                    defaultValue={ind[0]} \r\n                    onChange={onChangeIndNum} />\r\n            </Space>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Indicators\r\n//const onChangeRate = (value) => {\r\n//    console.log(`selected ${value}`);\r\n//}\r\n//<InputNumber min={0} max={100} defaultValue={3} onChange={onChangeRate} />"]},"metadata":{},"sourceType":"module"}