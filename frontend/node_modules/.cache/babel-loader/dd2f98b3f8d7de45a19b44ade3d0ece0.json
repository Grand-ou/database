{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alan\\\\OneDrive - \\u570B\\u7ACB\\u53F0\\u7063\\u5927\\u5B78\\\\\\u684C\\u9762\\\\repo\\\\frontend\\\\src\\\\Component\\\\Indicators.js\";\nimport { Select } from 'antd';\nimport 'antd/dist/antd.css'; //import axios from 'axios';\n\nimport { useEffect, useState } from 'react';\nimport { InputNumber } from 'antd';\nimport { Space } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst provinceData = ['Zhejiang', 'Jiangsu'];\nconst cityData = {\n  Zhejiang: ['Hangzhou', 'Ningbo', 'Wenzhou'],\n  Jiangsu: ['Nanjing', 'Suzhou', 'Zhenjiang']\n};\n\nconst Indicators = _ref => {\n  let {\n    setIndicator,\n    setRate,\n    setClickCheck\n  } = _ref;\n\n  const handleProvinceChange = value => {\n    console.log(`selected ${value}`);\n    setCities(cityData[value]);\n    setSecondCity(cityData[value][0]);\n  };\n\n  const onSecondCityChange = value => {\n    console.log(`selected ${value}`);\n    setSecondCity(value);\n    setClickCheck(false);\n  };\n\n  const onChange = value => {\n    console.log(`selected ${value}`);\n    setIndicator(value);\n    setClickCheck(false);\n  };\n\n  const onSearch = val => {\n    console.log('search:', val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      className: \"indicators\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u9078\\u64C7\\u6307\\u6A19\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        showSearch: true,\n        style: {\n          width: 200\n        },\n        defaultValue: provinceData[0],\n        onChange: handleProvinceChange,\n        onSearch: onSearch,\n        filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n        children: provinceData.map(province => /*#__PURE__*/_jsxDEV(Option, {\n          children: province\n        }, province, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        style: {\n          width: 120\n        },\n        value: secondCity,\n        onChange: onSecondCityChange,\n        children: cities.map(city => /*#__PURE__*/_jsxDEV(Option, {\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Indicators;\nexport default Indicators; //const onChangeRate = (value) => {\n//    console.log(`selected ${value}`);\n//}\n//<InputNumber min={0} max={100} defaultValue={3} onChange={onChangeRate} />\n\nvar _c;\n\n$RefreshReg$(_c, \"Indicators\");","map":{"version":3,"sources":["C:/Users/Alan/OneDrive - 國立台灣大學/桌面/repo/frontend/src/Component/Indicators.js"],"names":["Select","useEffect","useState","InputNumber","Space","Option","provinceData","cityData","Zhejiang","Jiangsu","Indicators","setIndicator","setRate","setClickCheck","handleProvinceChange","value","console","log","setCities","setSecondCity","onSecondCityChange","onChange","onSearch","val","width","input","option","children","toLowerCase","indexOf","map","province","secondCity","cities","city"],"mappings":"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","sourcesContent":["import { Select } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n//import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { InputNumber } from 'antd';\r\nimport { Space } from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst provinceData = ['Zhejiang', 'Jiangsu'];\r\nconst cityData = {\r\n  Zhejiang: ['Hangzhou', 'Ningbo', 'Wenzhou'],\r\n  Jiangsu: ['Nanjing', 'Suzhou', 'Zhenjiang'],\r\n};\r\n\r\nconst Indicators = ({ setIndicator, setRate, setClickCheck }) => {\r\n\r\n    const handleProvinceChange = value => {\r\n        console.log(`selected ${value}`);\r\n        setCities(cityData[value]);\r\n        setSecondCity(cityData[value][0]);\r\n    };\r\n    \r\n    const onSecondCityChange = value => {\r\n        console.log(`selected ${value}`);\r\n        setSecondCity(value);\r\n        setClickCheck(false);\r\n    };\r\n\r\n    const onChange = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setIndicator(value)\r\n        setClickCheck(false)\r\n    }\r\n      \r\n    const onSearch = (val) => {\r\n        console.log('search:', val);\r\n    }\r\n      \r\n    return(\r\n        <div>\r\n            <Space className='indicators'>\r\n                <h1>選擇指標</h1>\r\n                <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                defaultValue={provinceData[0]}\r\n                onChange={handleProvinceChange}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                >\r\n                {provinceData.map(province => (\r\n                    <Option key={province}>{province}</Option>\r\n                ))}\r\n                </Select>\r\n                <Select style={{ width: 120 }} value={secondCity} onChange={onSecondCityChange}>\r\n                {cities.map(city => (\r\n                    <Option key={city}>{city}</Option>\r\n                ))}\r\n      </Select>\r\n            </Space>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Indicators\r\n//const onChangeRate = (value) => {\r\n//    console.log(`selected ${value}`);\r\n//}\r\n//<InputNumber min={0} max={100} defaultValue={3} onChange={onChangeRate} />"]},"metadata":{},"sourceType":"module"}