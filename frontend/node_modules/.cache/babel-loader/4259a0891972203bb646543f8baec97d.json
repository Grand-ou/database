{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    userID,\n    password,\n    setRegisterStr\n  } = _ref;\n  useEffect(() => {\n    axios.post('../user', {\n      //某種function，傳入使用者帳密進入資料庫中，並確認是否有重複使用者ID(假設回傳一個字串)\n      \"UserID\": userID,\n      \"Password\": password\n    }).then(res => {\n      setRegisterStr(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Register, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Alan/OneDrive - 國立台灣大學/桌面/repo/frontend/src/Component/Register.js"],"names":["axios","useState","useEffect","Register","userID","password","setRegisterStr","post","then","res","data","catch","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,QAAQ,GAAG,QAA0C;AAAA;;AAAA,MAAzC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,GAAyC;AAEzDJ,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CAACO,IAAN,CAAW,SAAX,EAAsB;AAAU;AAC9B,gBAAUH,MADU;AAEpB,kBAAYC;AAFQ,KAAtB,EAICG,IAJD,CAIOC,GAAD,IAAS;AACbH,MAAAA,cAAc,CAACG,GAAG,CAACC,IAAL,CAAd;AACD,KAND,EAOCC,KAPD,CAOQC,KAAD,IAAW;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAoB,KAPxC;AAQD,GATQ,EASP,EATO,CAAT;AAWA,sBAAO,qCAAP;AAED,CAfD;;GAAMT,Q;;KAAAA,Q;AAiBN,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Register = ({ userID, password, setRegisterStr }) => {\r\n\r\n  useEffect(() => {\r\n    axios.post('../user', {         //某種function，傳入使用者帳密進入資料庫中，並確認是否有重複使用者ID(假設回傳一個字串)\r\n      \"UserID\": userID,\r\n      \"Password\": password\r\n    })\r\n    .then((res) => { \r\n      setRegisterStr(res.data)\r\n    })\r\n    .catch((error) => { console.log(error) })\r\n  },[])\r\n\r\n  return <>\r\n  </>\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}