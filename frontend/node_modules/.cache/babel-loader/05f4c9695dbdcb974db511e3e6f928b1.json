{"ast":null,"code":"var _jsxFileName = \"/Users/judy/database/frontend/src/Component/Register.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Space, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    userID,\n    password,\n    name,\n    phone,\n    setRegister,\n    setLR,\n    setRegisterPage\n  } = _ref;\n  const [registerStr, setRegisterStr] = useState();\n  useEffect(() => {\n    axios.post('http://127.0.0.1:8000/api/signup', {\n      //某種function，傳入使用者帳密進入資料庫中，並確認是否有重複使用者ID(假設回傳一個字串)\n      \"iname\": name,\n      \"acct_no\": userID,\n      \"pwd\": password,\n      \"phone\": phone\n    }).then(res => {\n      setRegisterStr(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u767B\\u5165\\u8207\\u8A3B\\u518A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), registerStr == 'Successfully signed up.' ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setRegister(false);\n        setLR(true);\n      },\n      children: \"\\u8A3B\\u518A\\u6210\\u529F\\uFF0C\\u8FD4\\u56DE\\u767B\\u5165\\u9801\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setRegister(false);\n        setRegisterPage(true);\n      },\n      children: \"\\u5E33\\u865F\\u5DF2\\u88AB\\u4F7F\\u7528\\uFF0C\\u8FD4\\u56DE\\u8A3B\\u518A\\u9801\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"strJ0I+hDvwIxAn1jiDcIQsWSB0=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/judy/database/frontend/src/Component/Register.js"],"names":["axios","useState","useEffect","Space","Button","Register","userID","password","name","phone","setRegister","setLR","setRegisterPage","registerStr","setRegisterStr","post","then","res","data","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;;;;AAEA,MAAMC,QAAQ,GAAG,QAA4E;AAAA;;AAAA,MAA3E;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,WAAjC;AAA8CC,IAAAA,KAA9C;AAAqDC,IAAAA;AAArD,GAA2E;AAE3F,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CAACe,IAAN,CAAW,kCAAX,EAA+C;AAAU;AACvD,eAASP,IADoC;AAE7C,iBAAWF,MAFkC;AAG7C,aAAOC,QAHsC;AAI7C,eAASE;AAJoC,KAA/C,EAMCO,IAND,CAMOC,GAAD,IAAS;AACbH,MAAAA,cAAc,CAACG,GAAG,CAACC,IAAL,CAAd;AACD,KARD,EASCC,KATD,CASQC,KAAD,IAAW;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAoB,KATxC;AAUD,GAXQ,EAWP,EAXO,CAAT;AAaA,sBAAO;AAAA,4BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,EAEJP,WAAW,IAAI,yBAAf,gBACD,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACH,QAAAA,WAAW,CAAC,KAAD,CAAX;AAAoBC,QAAAA,KAAK,CAAC,IAAD,CAAL;AAAa,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,gBAED,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACD,QAAAA,WAAW,CAAC,KAAD,CAAX;AAAoBE,QAAAA,eAAe,CAAC,IAAD,CAAf;AAAuB,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJK;AAAA,kBAAP;AAMD,CAvBD;;GAAMP,Q;;KAAAA,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { Space, Button } from 'antd'\r\n\r\nconst Register = ({ userID, password, name, phone, setRegister, setLR, setRegisterPage }) => {\r\n\r\n  const [registerStr, setRegisterStr] = useState();\r\n\r\n  useEffect(() => {\r\n    axios.post('http://127.0.0.1:8000/api/signup', {         //某種function，傳入使用者帳密進入資料庫中，並確認是否有重複使用者ID(假設回傳一個字串)\r\n      \"iname\": name,\r\n      \"acct_no\": userID,\r\n      \"pwd\": password,\r\n      \"phone\": phone\r\n    })\r\n    .then((res) => { \r\n      setRegisterStr(res.data)\r\n    })\r\n    .catch((error) => { console.log(error) })\r\n  },[])\r\n\r\n  return <>\r\n    <h1>登入與註冊</h1>\r\n    {registerStr == 'Successfully signed up.'?\r\n    <Button onClick={()=>{setRegister(false); setLR(true);}}>註冊成功，返回登入頁</Button>:\r\n    <Button onClick={()=>{setRegister(false); setRegisterPage(true);}}>帳號已被使用，返回註冊頁</Button>}\r\n  </>\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}